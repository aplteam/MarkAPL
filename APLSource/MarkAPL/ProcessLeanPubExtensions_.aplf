 ns←parms ProcessLeanPubExtensions_ ns;leanPubExtensions;extension;isNotCodeBlock;bool;start;lengths;i;ind;noOf;openDiv;body;html;img;after;report;this
 leanPubExtensions←'AWTEIQDX'
 :For extension :In leanPubExtensions
     isNotCodeBlock←~WhereAreCodeBlocks ns.markdown
     :If 0<+/bool←isNotCodeBlock\(3↑¨isNotCodeBlock/ns.markdown)≡¨⊂extension,'> '
     :AndIf 0≠≢start←⍸0 1⍷bool
         lengths←,+/¨bool{⎕ML←3 ⋄ ⍺⊂⍵}bool
         :For i :In ⍳≢start
             ind←i⊃start
             :If 0=≢ind⊃ns.markdown            ⍝ The line before must be empty
                 noOf←i⊃lengths
                 after←1+ind+noOf
                 :If 0=≢after⊃ns.markdown      ⍝ The line after must be empty
                     openDiv←⊂'<div class="leanpub',((extension≡'A')/'_A'),'">'
                     body←3↓¨ns.markdown[ind+⍳lengths[i]]
                     (html report)←ConvertMarkdown2HTML body
                     :If extension≠'A'
                         img←'<img src="',(parms LeanPubImageFor extension),'" alt="',(LeanPubAltTextFor extension),'">'
                         html←img'<div>',html,⊂'</div>'
                     :EndIf
                     html←{0=+/b←0=≢¨⍵:⍵ ⋄ w←⍵ ⋄ (b/w)←⊂'&nbsp;' ⋄ w}html  ⍝ Important: only this way "html" is later recognized as a single HTML block.
                     html←openDiv,html,⊂'</div>'
                     ns.markdown←(ind↑ns.markdown),html,(ind+noOf)↓ns.markdown
                     ns.lineNumbers←(ind↑ns.lineNumbers),((≢html)⍴⊂(1+ind),ind+noOf),(ind+noOf)↓ns.lineNumbers
                     :If 0≠≢report
                         :For this :In report
                             :If ∨/'(line'⍷this
                                 ns.report,←((ind+1)⊃ns.lineNumbers)∘{i←-(⌽⍵)⍳' ' ⋄ (i↓⍵),' ',({1=≢⍵:⍕⍵ ⋄ ⊃{⍺,'-',⍵}/⍕¨⍵}⍺),')'}¨report
                             :Else
                                 ns.report,←((ind+1)⊃ns.lineNumbers)∘{i←-(⌽⍵)⍳' ' ⋄ ⍵,' (lines ',({1=≢⍵:⍕⍵ ⋄ ⊃{⍺,'-',⍵}/⍕¨⍵}⍺),')'}¨report
                             :EndIf
                         :EndFor
                     :EndIf
                     (i↓start)←(i↓start)+(≢html)-noOf
                 :EndIf
             :EndIf
         :EndFor
     :EndIf
 :EndFor
