 ProcessAutomaticLinks←{
 ⍝ This must be done early because later any "<" and ">" will be replaced by there HTML entities.
 ⍝ (It was a very bad idea to use this syntax! [](url) is so obvious!)
 ⍝ Therefore we replace "<" and ">" by made-up HTML entities "&pointybracket_open;" and
 ⍝ "&pointybracket_close;" which we later replace by "<" and ">".
 ⍝ Note that this function escapes any of `_`, `__`, `*`, `**`, `~~`.
     txt←⍵
     mask←~GetMaskForCode txt
     0=≢i1←¯1+⍸'<'=mask\mask/txt:txt
     txt←i1[1]⌽txt
     (≢txt)<l←txt⍳'>':(-i1[1])⌽txt
     link←¯1↓1↓l↑txt
     sa←GetSpecialAttributes{'{'∊⍵:{⍵↑⍨⍵⍳'}'}{⍵↓⍨¯1+⍵⍳'{'}⍵ ⋄ ⍵}link
     link←A.DTB{⍵/⍨~Between ⍵∊'{}'}link
     ∨/link∊AllWhiteSpaceChars:⍵                       ⍝ The link text must not contain any white space
     0={(∨/'://'⍷⍵)∨'@'∊⍵}link:⍵                       ⍝ We need to catch URLs and email addresses
     link,⍨←(0={(∨/'://'⍷⍵)∨'@'∊⍵}link)/'http://'
     link←'\_' '\*' '\~\~'⎕R'\\_' '\\*' '\\~\\~'⍠('Greedy' 0)⊣link
     pbo←'&pointybracket_open;'                        ⍝ Later converted ...
     pbc←'&pointybracket_close;'                       ⍝ ... back to < and >.
     link,⍨←(('@'∊link)∧'mailto:'{⍺≢⎕C(≢⍺)↑⍵}link)/'mailto:'
     class←' class="',((1+'mailto'{⍺≡(≢⍺)↑⍵}link)⊃'external_link' 'mailto_link'),'"'
     linkText←sa DropSpecialAttributes'mailto:'{⍵↓⍨(≢⍺)×⍺≡(≢⍺)↑⍵}1↓¯1↓l↑txt
     linkText←'\_' '\*' '\~\~'⎕R'\\_' '\\*' '\\~\\~'⍠('Greedy' 0)⊣linkText
     txt←(pbo,'a href="',link,'"',class,sa,pbc,linkText,pbo,'/a',pbc),l↓txt
     txt←(-i1[1])⌽txt
     ∇ txt
 }
