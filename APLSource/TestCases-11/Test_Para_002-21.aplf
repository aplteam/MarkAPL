 R←Test_Para_002(stopFlag batchFlag);⎕TRAP;ns;m;expected
⍝ Test what belongs to a paragraph.
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←1                                                                   ⍝ Not OK

 m←'This is a paragraph' '* list'                                    ⍝ bulleted list
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<ul>' '<li>list</li>' '</ul>'≢ns.html

 m←'This is a paragraph' '917. list'                                 ⍝ Ordered list
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<ol start="917">' '<li>list</li>' '</ol>'≢ns.html

 m←'This is a paragraph' '> BlockQuote'                                ⍝ Blockquote
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<blockquote>' '<p>BlockQuote</p>' '</blockquote>'≢ns.html

 m←'This is a paragraph' '<pre>' 'APL Code' '</pre>'                   ⍝ Embedded HTML
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<pre><code>APL Code</code></pre>'≢ns.html

 m←'This is a paragraph' '# caption'                                   ⍝ Header line (pound syntax)
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<div class="h_tag">' '<a href="#caption" id="caption" class="autoheader_anchor">' '<h1>caption</h1>' '</a>' '</div>'≢ns.html

 m←'This is a paragraph' 'caption' '==='                               ⍝ Header line (= syntax)
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 expected←'<div class="h_tag">' '<a href="#This-is-a-paragraph-caption" id="This-is-a-paragraph-caption" class="autoheader_anchor">' '<h1>This is a paragraph caption</h1>' '</a>' '</div>'
 →FailsIf~∧/expected≡ns.html

 m←'This is a paragraph' 'caption' '---'                               ⍝ Header line (- syntax)
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf~∧/'<a href="#This-is-a-paragraph-caption" id="This-is-a-paragraph-caption" class="autoheader_anchor">' '<h2>This is a paragraph caption</h2>'∊ns.html

 m←'This is a paragraph' '_ _ _ _ '                                    ⍝ Horizontal ruler
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<hr>'≢2↑ns.html

 m←'This is a paragraph' '|col1|col2|'                                 ⍝ Table
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<table>'≢2↑ns.html

 m←'This is a paragraph' '```' 'APL code' '```'                        ⍝ Code block (```)
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<pre><code>APL code</code></pre>'≢2↑ns.html

 m←'This is a paragraph' '~~~' 'APL code' '~~~'                        ⍝ Code block (~~~)
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 →FailsIf'<p>This is a paragraph</p>' '<pre><code>APL code</code></pre>'≢2↑ns.html

 m←'This is a paragraph' '~~~ {.classname}' 'APL code' '~~~'           ⍝ Code block (~~~) with special attribute
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 expected←'<p>This is a paragraph</p>' '<pre><code class="classname">APL code</code></pre>'
 →FailsIf expected≢2↑ns.html

 m←'This and **_that' '3.1 and more_**' '' 'Foo'
 ns←##.MarkAPL.Init''m
 ns←##.MarkAPL.Process ns
 expected←'<p>This and <strong><em>that 3.1 and more</em></strong></p>' '<p>Foo</p>'
 →FailsIf expected≢2↑ns.html
 R←0                                                                   ⍝ OK
