 R←Test_InLine_002(stopFlag batchFlag);⎕TRAP;ns;expected;md
⍝ Test in-line mark-up; here ** <==> <strong>
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←T._Failed

 md←⊂'This is a simple paragraph'
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 expected←'<p>This is a simple paragraph</p>'
 →T.PassesIf expected≡↑ns.html

 md←⊂'This is a simple **paragraph**!'
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 expected←'<p>This is a simple <strong>paragraph<strong>!</p>'
 →T.PassesIf expected≢↑ns.html

 md←⊂'This is a simple **paragraph** that has APL in it: `(2**5)÷0.5'
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 expected←'<p>This is a simple <strong>paragraph</strong> that has APL in it: `(2**5)÷0.5</p>'
 →T.PassesIf expected≡↑ns.html

 md←'normal' '**' 'bold' '**' 'normal'
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 expected←'<p>normal ** bold ** normal</p>'
 →T.PassesIf expected≡↑ns.html

 md←⊂'In**s**ide a word'
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 expected←'<p>In<strong>s</strong>ide a word</p>'
 →T.PassesIf expected≡↑ns.html

 md←⊂'**Full paragraph**.'
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 expected←'<p><strong>Full paragraph</strong>.</p>'
 →T.PassesIf expected≡↑ns.html

 md←⊂'`** is bold **` survives: ** is bold **'
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 expected←'<p><code>** is bold **</code> survives: ** is bold **</p>'
 →T.PassesIf expected≡↑ns.html

 R←T._OK
⍝Done
