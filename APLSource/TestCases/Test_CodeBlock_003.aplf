 R←Test_CodeBlock_003(stopFlag batchFlag);⎕TRAP;md;ns;parms;expected
⍝ Test code blocks with fencing in "Extra" style.
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←T._Failed

 parms←##.MarkAPL.CreateParms
 parms.fenceStyle←'Extra'
 md←'~~~' '{{⍵/⍨2=+⌿0=⍵∘.|⍵}⍳⍵}' '~~~'                              ⍝ Three lines
 ns←##.MarkAPL.Init parms md
 ns←##.MarkAPL.Process ns
 →T.FailsIf(,⊂'<pre><code>{{⍵/⍨2=+⌿0=⍵∘.|⍵}⍳⍵}</code></pre>')≢ns.html

 md←'~~~' '' '~~~'                                                  ⍝ Three lines, but no real contents
 ns←##.MarkAPL.Init parms md
 ns←##.MarkAPL.Process ns
 →T.FailsIf~0∊⍴ns.html

 md←'~~~' '  {{⍵/⍨2=+⌿0=⍵∘.|⍵}⍳⍵}' '~~~'                            ⍝ Single line, two leading blanks
 ns←##.MarkAPL.Init parms md
 ns←##.MarkAPL.Process ns
 →T.FailsIf(,⊂'<pre><code>  {{⍵/⍨2=+⌿0=⍵∘.|⍵}⍳⍵}</code></pre>')≢ns.html

 md←'  ~~~' '+/⍳' '     {{⍵/⍨2=+⌿0=⍵∘.|⍵}⍳⍵}' ' 0∊⍴⍴' '~~~'         ⍝ Five lines
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 expected←'<pre><code>+/⍳' '     {{⍵/⍨2=+⌿0=⍵∘.|⍵}⍳⍵}' ' 0∊⍴⍴</code></pre>'
 →T.FailsIf expected≢ns.html

 md←'~~~~~~~~' '{{⍵/⍨2=+⌿0=⍵∘.|⍵}⍳⍵}' '   ~~~~~~~~'                  ⍝ Fence has more than 3 chars; second fence has leading blanks
 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns
 →T.FailsIf(,⊂'<pre><code>{{⍵/⍨2=+⌿0=⍵∘.|⍵}⍳⍵}</code></pre>')≢ns.html

 R←T._OK
