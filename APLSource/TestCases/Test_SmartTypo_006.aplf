 R←Test_SmartTypo_006(stopFlag batchFlag);⎕TRAP;md;ns;parms;html;buff;expected
⍝ Test smart typography: " =>  “„  (or „“) but not in something like <div attr="foo"> of course.
 ⎕TRAP←(999 'C' '. ⍝ Deliberate error')(0 'N')
 R←∆Failed

 md←''
 md,←⊂'"This cannot be true" he said wearily.'
 md,←⊂''
 md,←⊂'The double quotes (`"`) are converted into curly quotes.'
 md,←⊂''
 md,←⊂'This:'
 md,←⊂''
 md,←⊂'~~~'
 md,←⊂' `"` are converted automatically into " and ".'
 md,←⊂'~~~'
 md,←⊂''
 md,←⊂'results in this:'
 md,←⊂''
 md,←⊂' `"` are converted automatically into " and ".'
 md,←⊂''
 md,←⊂'What ""happens"" to this?'                      ⍝ A pair of double-quotes should not be touched
 md,←⊂''
 md,←⊂'<div id="foo">This shows in red if okay</div>'  ⍝ These double quotes MUST NOT change
 md,←⊂'<style>'
 md,←⊂'#foo {color:red;}'
 md,←⊂'</style>'
 md,←⊂''
 md,←⊂'## Level-  2'   ⍝ Transforms into "---"!

 ns←##.MarkAPL.Init''md
 ns←##.MarkAPL.Process ns

 expected←'<p>“This cannot be true” he said wearily.</p>'
 →PassesIf expected≡0⊃ns.html
 expected←'<p>The double quotes (<code>"</code>) are converted into curly quotes.</p>'
 →PassesIf expected≡1⊃ns.html
 expected←'<pre><code> `"` are converted automatically into " and ".</code></pre>'
 →PassesIf expected≡3⊃ns.html
 expected←'<p><code>"</code> are converted automatically into “ and ”.</p>'
 →PassesIf expected≡5⊃ns.html
 →PassesIf 2=+/'""'⍷6⊃ns.html
 expected←'<div id="foo">This shows in red if okay</div>'
 →PassesIf(⊂expected)∊ns.html
 expected←⊂'<a href="#Level---2" id="Level---2" class="autoheader_anchor">'
 →PassesIf expected∊ns.html

 R←∆OK
